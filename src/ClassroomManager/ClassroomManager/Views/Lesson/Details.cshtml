@model App.Core.Entities.Lesson

@{
    ViewData["Title"] = "Details";
}
<main id="panel">
    <h2>@Html.DisplayFor(model => model.Title)</h2>

    <div>
        <h4>
            Lesson Details
            <a asp-action="Delete" asp-controller="Lesson" asp-route-id="@Model.Id">
                <i class="far fa-trash-alt"></i>
            </a>
            <a asp-action="Edit" asp-controller="Lesson" asp-route-id="@Model.Id">
                <i class="far fa-edit"></i>
            </a>
        </h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Summary)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Summary)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Subject)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Subject)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.PublishStatus)
            </dt>
            <dd>
                @Enum.GetName(typeof(PublishStatusEnum), Int32.Parse(Model.PublishStatus))
            </dd>
        </dl>
    </div>
    <div id="accordion">
        @foreach (var section in Model.Sections)
        {
            <h3>@Html.DisplayFor(item => section.SubTitle)</h3>
            <div>
                @Html.Raw(section.Content)
            </div>
        }
    </div>
    <div class="mt-3">
        <a asp-action="Edit" asp-controller="Lesson" asp-route-id="@Model.Id" class="btn btn-primary">Edit</a> 
        <a asp-action="Index" asp-controller="Lesson" asp-route-user="@Model.User" class="btn btn-outline-secondary">Back to Lessons</a>
    </div>
</main>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}